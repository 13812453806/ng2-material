{"version":3,"file":"pagination-split-usage.component.js","sourceRoot":"","sources":["pagination-split-usage.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA8D,eAAe,CAAC,CAAA;AAC9E,6BAAwD,cAAc,CAAC,CAAA;AAEvE,iCAAwB,oBAAoB,CAAC,CAAA;AAU7C;IAeE,uCAAoB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;QAdhC,UAAK,GAAkB,4BAAS,CAAC;QAEjC,eAAU,GAAQ;YAChB,WAAW,EAAE,CAAC;YACd,YAAY,EAAE,CAAC;YACf,UAAU,EAAE,CAAC;SACd,CAAC;QAIF,mBAAc,GAAkB,EAAE,CAAC;IAIA,CAAC;IAEpC,yDAAiB,GAAjB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,CAAC,CAAC;YACjC,IAAI,CAAC,WAAW,GAAG,kBAAe,IAAI,CAAC,WAAW,EAAE,8DAAsD,CAAC;QAC7G,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,CAAC,CAAC;YACjC,IAAI,CAAC,WAAW,GAAG,+BACD,IAAI,CAAC,WAAW,EAAE,0FAClB,IAAI,CAAC,WAAW,EAAE,sEACjC,CAAC;QACN,CAAC;QAED,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,CAAC,CAAC;QAEhC,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,mDAAW,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;IACxD,CAAC;IAED,oDAAY,GAAZ;QACE,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAC1E,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;QAC7C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACrD,CAAC;IAED,oDAAY,GAAZ,UAAa,KAAK;QAChB,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,KAAK,oBAAoB,IAAI,KAAK,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC;YACjG,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;YACnC,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC;IACH,CAAC;IAED,gDAAQ,GAAR;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,oBAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5E,CAAC;IAED,mDAAW,GAAX;QACE,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;IAC/B,CAAC;IAlEH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,wBAAwB;YAClC,WAAW,EAAE,uCAAuC;YACpD,SAAS,EAAE,CAAC,sCAAsC,CAAC;YACnD,UAAU,EAAE,CAAC,kCAAmB,CAAC;YACjC,aAAa,EAAE,wBAAiB,CAAC,IAAI;SACtC,CAAC;;qCAAA;IA4DF,oCAAC;AAAD,CAAC,AA3DD,IA2DC;AA3DY,qCAA6B,gCA2DzC,CAAA","sourcesContent":["import {Component, ViewEncapsulation, OnInit, OnDestroy} from '@angular/core';\nimport {MATERIAL_DIRECTIVES, Media, MediaListener} from \"ng2-material\";\n\nimport {bookDatas} from './pagination-datas';\n\n@Component({\n  moduleId: module.id,\n  selector: 'pagination-split-usage',\n  templateUrl: 'pagination-split-usage.component.html',\n  styleUrls: ['pagination-split-usage.component.css'],\n  directives: [MATERIAL_DIRECTIVES],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PaginationSplitUsageComponent implements OnInit, OnDestroy {\n  pages: Array<string> = bookDatas;\n\n  pagination: any = {\n    currentPage: 1,\n    itemsPerPage: 2,\n    totalItems: 6\n  };\n\n  rangeFormat: string;\n\n  displayedPages: Array<string> = [];\n\n  mediaListener: MediaListener;\n\n  constructor(private media: Media) {}\n\n  refreshPageBySize() {\n    if (this.media.hasMedia('xs')) {\n      this.pagination.itemsPerPage = 1;\n      this.rangeFormat = `<span flex=\"${this.getFlexSize()}\" layout=\"column\" class=\"page-number\">{start}</span>`;\n    } else {\n      this.pagination.itemsPerPage = 2;\n      this.rangeFormat = ` \n          <span flex=\"${this.getFlexSize()}\" layout=\"column\" class=\"page-number\">{start}</span>\n          <span flex=\"${this.getFlexSize()}\" layout=\"column\" class=\"page-number\">{end}</span>\n        `;\n    }\n\n    this.pagination.currentPage = 1;\n\n    this.refreshPages();\n  }\n\n  getFlexSize() {\n    return Math.round(100 / this.pagination.itemsPerPage);\n  }\n\n  refreshPages() {\n    let start = (this.pagination.currentPage - 1) * this.pagination.itemsPerPage,\n      end = start + this.pagination.itemsPerPage;\n    this.displayedPages = this.pages.slice(start, end);\n  }\n\n  detectChange(event) {\n    if (event !== undefined && event.name === 'pagination_changed' && event.pagination !== undefined) {\n      this.pagination = event.pagination;\n      this.refreshPages();\n    }\n  }\n\n  ngOnInit() {\n    this.mediaListener = this.media.listen(Media.getQuery('xs'));\n    this.mediaListener.onMatched.subscribe(this.refreshPageBySize.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.mediaListener.destroy();\n  }\n}\n"]}