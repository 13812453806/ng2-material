{"version":3,"file":"highlight-container.component.js","sourceRoot":"","sources":["highlight-container.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA0D,eAAe,CAAC,CAAA;AAC1E,oCAAiC,uBAAuB,CAAC,CAAA;AAQzD;IAGE,qCAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAFjC,aAAQ,GAAW,EAAE,CAAC;IAEc,CAAC;IAE9C,qDAAe,GAAf;QACE,4CAA4C;QAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAC5C,IAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7E,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACvC,IAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAgB,CAAC;gBAC3C,IAAM,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;gBACtC,IAAM,OAAO,GAAG,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBAC3D,IAAM,QAAQ,GAAG,OAAO,GAAG,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,GAAG,MAAM,CAAC;gBAE7E,IAAM,IAAI,GAAG,wCAAkB,CAAC,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;gBAC/D,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACrC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;YAC7B,CAAC;QACH,CAAC;IACH,CAAC;IAnBD;QAAC,YAAK,EAAE;;iEAAA;IAPV;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,0BAA0B;YACpC,QAAQ,EAAE,2BAA2B;YACrC,SAAS,EAAE,CAAC,mCAAmC,CAAC;SACjD,CAAC;;mCAAA;IAsBF,kCAAC;AAAD,CAAC,AArBD,IAqBC;AArBY,mCAA2B,8BAqBvC,CAAA","sourcesContent":["import {ElementRef, Component, AfterViewInit, Input} from '@angular/core';\nimport {HighlightComponent} from './highlight.component';\n\n@Component({\n  moduleId: module.id,\n  selector: 'docs-highlight-container',\n  template: `<ng-content></ng-content>`,\n  styleUrls: ['highlight-container.component.css']\n})\nexport class HighlightContainerComponent implements AfterViewInit {\n  @Input() selector: string = '';\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngAfterViewInit() {\n    // Find children and highlight them in place\n    if (this.selector !== '' && this.elementRef) {\n      const blocks = this.elementRef.nativeElement.querySelectorAll(this.selector);\n      for (var i = 0; i < blocks.length; i++) {\n        const codeBlock = blocks[i] as HTMLElement;\n        const inputCode = codeBlock.innerText;\n        const hasType = codeBlock.className.indexOf('lang-') === 0;\n        const language = hasType ? codeBlock.className.replace('lang-', '') : 'html';\n\n        const code = HighlightComponent.highlight(language, inputCode);\n        codeBlock.classList.add('highlight');\n        codeBlock.innerHTML = code;\n      }\n    }\n  }\n}\n"]}