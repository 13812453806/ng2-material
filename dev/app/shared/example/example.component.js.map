{"version":3,"file":"example.component.js","sourceRoot":"","sources":["example.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, Input, DynamicComponentLoader, ComponentRef, Query, QueryList, ViewContainerRef, AfterViewInit, ViewChild} from '@angular/core';\nimport {MATERIAL_DIRECTIVES, MdTabs} from 'ng2-material';\nimport {Http} from '@angular/http';\nimport {MdToolbar} from '@angular2-material/toolbar';\nimport {IExampleData, DEMO_DIRECTIVES} from '../../index';\nimport {HighlightComponent} from '../highlight/highlight.component';\n\nexport interface ISourceFile {\n  data: string;\n  type: string;\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'docs-example',\n  templateUrl: 'example.component.html',\n  styleUrls: ['example.component.css'],\n  directives: [MATERIAL_DIRECTIVES, HighlightComponent, MdToolbar]\n})\nexport class ExampleComponent implements AfterViewInit {\n  private _model: IExampleData = null;\n  private _reference: ComponentRef<any> = null;\n\n  @Input()\n  set model(value: IExampleData) {\n    this._model = value;\n    this.applyModel(value);\n  }\n\n  get model(): IExampleData { return this._model; }\n\n  private _loaded: boolean = false;\n  get loaded(): boolean { return this._loaded; }\n\n  constructor(\n      public http: Http, @Query(MdTabs) public panes: QueryList<MdTabs>,\n      public dcl: DynamicComponentLoader) {}\n\n  private _init: boolean = false;\n\n  /**\n   * The set of source files associated with the example\n   */\n  @Input() public orderedFiles: ISourceFile[] = [];\n\n  /**\n   * True to show the source code for the example\n   */\n  @Input() public showSource: boolean = false;\n\n  @Input() private showTabs: boolean = false;\n\n  /**\n   * The selected type of source to view.\n   */\n  @Input() public selected: string = 'html';\n\n  @ViewChild('example', {read: ViewContainerRef}) private exampleRef;\n\n  ngAfterViewInit(): any {\n    this._init = true;\n    if (this._model) {\n      this.applyModel(this._model);\n    }\n  }\n\n\n  applyModel(model: IExampleData) {\n    if (!this._init) {\n      return;\n    }\n    this.orderedFiles = [];\n    this._loaded = false;\n    // Fetch template, styles, and source strings for display.\n    if (model.template) {\n      this.addFile(model.template, 'html');\n    }\n    if (model.styles) {\n      this.addFile(model.styles, 'scss');\n    }\n    if (model.source) {\n      this.addFile(model.source, 'typescript');\n    }\n\n    // Render the example component into the view.\n    let template = `<${model.component}></${model.component}>`;\n    @Component({\n      selector: `md-example-${model.component}`,\n      template: template,\n      directives: [MATERIAL_DIRECTIVES, DEMO_DIRECTIVES, HighlightComponent]\n    })\n    class CompiledComponent {\n    }\n    this.dcl.loadNextToLocation(CompiledComponent, this.exampleRef)\n        .then((ref: ComponentRef<CompiledComponent>) => {\n          if (this._reference) {\n            this._reference.destroy();\n          }\n          this._loaded = true;\n          this._reference = ref;\n        });\n  }\n\n  addFile(data: string, type: string) {\n    let desc: ISourceFile = {type: type, data: data};\n    // this.http.get(url).subscribe((res: Response) => { desc.data = res.text(); });\n    this.orderedFiles.push(desc);\n  }\n\n  toggleSource() {\n    if (this.showSource) {\n      this.showTabs = false;\n      setTimeout(() => { this.showSource = false; }, 500);\n    } else {\n      this.showSource = true;\n      setTimeout(() => { this.showTabs = true; }, 25);\n    }\n  }\n}\n"]}