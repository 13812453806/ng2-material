{"version":3,"file":"highlight.component.js","sourceRoot":"","sources":["highlight.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, Input, ViewEncapsulation, AfterContentInit, ElementRef} from '@angular/core';\n\ndeclare var hljs: any;\n\n@Component({\n  moduleId: module.id,\n  selector: 'docs-highlight',\n  styleUrls: ['highlight.component.css'],\n  template: `<pre><code class=\"highlight\" [innerHtml]=\"rendered || text\"><ng-content></ng-content></code></pre>`\n})\nexport class HighlightComponent implements AfterContentInit {\n  get type(): string { return this._type; }\n\n  @Input('type')\n  set type(value: string) {\n    this._type = value;\n    this.render();\n  }\n\n  get text(): string { return this._text; }\n\n  @Input('text')\n  set text(value: string) {\n    this._text = value;\n    this.render();\n  }\n\n  private _text: string = '';\n  private _type: string = 'typescript';\n\n  rendered: string = null;\n\n  constructor(private element: ElementRef) {}\n\n  ngAfterContentInit() {\n    // If there is no text binding, use the body of the element.\n    if (this._text === '' && this.element) {\n      this.text = this.element.nativeElement.innerText;\n    }\n  }\n\n  render() {\n    var lines = this._text.split('\\n');\n    if (this._text.trim().length === 0 || lines.length === 0) {\n      return;\n    }\n    // Remove empty lines\n    lines = lines.filter((line) => line.trim().length > 0);\n\n    // Make it so each line starts at 0 whitespace\n    var firstLineWhitespace = lines[0].match(/^\\s*/)[0];\n    var startingWhitespaceRegex = new RegExp('^' + firstLineWhitespace);\n    lines = lines.map(function(line) {\n      return line.replace(startingWhitespaceRegex, '').replace(/\\s+$/, '');\n    });\n\n\n    var highlightedCode = hljs.highlight(this._type, lines.join('\\n'), true);\n    highlightedCode.value =\n        highlightedCode.value.replace(/=<span class=\"hljs-value\">\"\"<\\/span>/gi, '')\n            .replace('<head>', '')\n            .replace('<head/>', '');\n    this.rendered = highlightedCode.value;\n  }\n}\n"]}