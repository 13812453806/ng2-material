{"version":3,"file":"components.service.js","sourceRoot":"","sources":["components.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAyB,eAAe,CAAC,CAAA;AACzC,qBAA6B,eAAe,CAAC,CAAA;AAmB7C;IAKE,2BAAY,IAAU;QALxB,iBA4DC;QA3DQ,eAAU,GAAQ,IAAI,CAAC;QAK5B,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAO,UAAC,OAAO;YACxC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,UAAC,GAAa;gBAC5C,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBAC7B,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC,CAAC;QAEL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAa,GAAb;QAAA,iBAEC;QADC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAQ,MAAM,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,wCAAY,GAAZ,UAAa,EAAU;QAAvB,iBAUC;QATC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACxB,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,CAAiB;gBACxC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;oBAChB,IAAI,GAAG,CAAC,CAAC;gBACX,CAAC;YACH,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAW,GAAX,UAAY,SAAyB;QAArC,iBAaC;QAZC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACxB,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;YACf,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,CAAiB,EAAE,CAAS;gBACnD,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC1B,KAAK,GAAG,CAAC,CAAC;gBACZ,CAAC;YACH,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;gBACd,KAAK,GAAG,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC;YACjC,CAAC;YACD,MAAM,CAAC,KAAI,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAO,GAAP,UAAQ,SAAyB;QAAjC,iBAaC;QAZC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACxB,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;YACf,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,CAAiB,EAAE,CAAS;gBACnD,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC1B,KAAK,GAAG,CAAC,CAAC;gBACZ,CAAC;YACH,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,CAAC,KAAK,IAAI,KAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACxC,KAAK,GAAG,CAAC,CAAC,CAAC;YACb,CAAC;YACD,MAAM,CAAC,KAAI,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IA5DH;QAAC,iBAAU,EAAE;;yBAAA;IA6Db,wBAAC;AAAD,CAAC,AA5DD,IA4DC;AA5DY,yBAAiB,oBA4D7B,CAAA","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Http, Response} from '@angular/http';\n\nexport interface IComponentExample {\n  component: string;\n  name: string;\n  source: string;\n  styles: string;\n  template: string;\n}\n\nexport interface IComponentMeta {\n  id: string;\n  readme?: string;\n  name: string;\n  sources: string[];\n  examples: IComponentExample[];\n}\n\n@Injectable()\nexport class ComponentsService {\n  public components: any = null;\n\n  private _promise: Promise<void>;\n\n  constructor(http: Http) {\n    this._promise = new Promise<void>((resolve) => {\n      http.get('meta.json').subscribe((res: Response) => {\n        this.components = res.json();\n        resolve();\n      });\n\n    });\n  }\n\n  getComponents(): Promise<IComponentMeta[]> {\n    return this._promise.then(() => { return this.components; });\n  }\n\n  getComponent(id: string): Promise<IComponentMeta> {\n    return this._promise.then(() => {\n      let pick = null;\n      this.components.forEach((c: IComponentMeta) => {\n        if (c.id === id) {\n          pick = c;\n        }\n      });\n      return pick;\n    });\n  }\n\n  getPrevious(component: IComponentMeta): Promise<IComponentMeta> {\n    return this._promise.then(() => {\n      let index = -1;\n      this.components.forEach((c: IComponentMeta, i: number) => {\n        if (c.id === component.id) {\n          index = i;\n        }\n      });\n      if (index < 1) {\n        index = this.components.length;\n      }\n      return this.components[index - 1];\n    });\n  }\n\n  getNext(component: IComponentMeta): Promise<IComponentMeta> {\n    return this._promise.then(() => {\n      let index = -1;\n      this.components.forEach((c: IComponentMeta, i: number) => {\n        if (c.id === component.id) {\n          index = i;\n        }\n      });\n      if (index >= this.components.length - 1) {\n        index = -1;\n      }\n      return this.components[index + 1];\n    });\n  }\n}\n"]}